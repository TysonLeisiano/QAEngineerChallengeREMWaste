{
	"info": {
		"_postman_id": "1b5c1193-1c65-47b3-9acf-919245c18a53",
		"name": "API_Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38131121",
		"_collection_link": "https://www.postman.com/testteam-0415/workspace/qaengineerapitestschallenge/collection/38131121-1b5c1193-1c65-47b3-9acf-919245c18a53?action=share&source=collection_link&creator=38131121"
	},
	"item": [
		{
			"name": "Login Requests",
			"item": [
				{
					"name": "successLogin - valid creds",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// postive case\r",
									"pm.test(\"Successful login\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"admin\",\r\n    \"password\": \"password123\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "unauthorizedLogin - invalid creds",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// negative case\r",
									"pm.test(\"Unauthorized login\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"NoAdmin\",\r\n    \"password\": \"password123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "unsuccessfulLogin - missing fields",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Unauthorized login - Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"Unauthorized login - Error message present\", function () {\r",
									"    const res = pm.response.json();\r",
									"    pm.expect(res).to.have.property(\"error\");\r",
									"    pm.expect(res.error).to.include(\"Invalid credentials\"); // adjust based on actual message\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"\",\r\n    \"password\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Delete Requests",
			"item": [
				{
					"name": "deleteTodoItem - valid existent ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Item deleted\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"  pm.expect(pm.response.text()).to.include(\"Todo deleted.\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"fshsh\",\r\n    \"status\": false,\r\n    \"id\": \"6888f94588c617814e0ea0a4\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/delete/6889eb9c8210cdb87d96c446",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"delete",
								"6889eb9c8210cdb87d96c446"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteTodoItem - valid non-existent ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should return 404 for valid but nonexistent ID\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(404);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/delete/6889ebe08210cdb87d96c443",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"delete",
								"6889ebe08210cdb87d96c443"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get Requests",
			"item": [
				{
					"name": "getAllTodoItems",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get items - success\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"  pm.expect(pm.response.json().message).to.eql(\"successfully fetched todos\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/get",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"get"
							]
						}
					},
					"response": []
				},
				{
					"name": "getATodoItem - existing todo ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get items - success\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"  pm.expect(pm.response.json().message).to.eql(\"successfully fetched todo\");\r",
									"\r",
									"  const jsonData = pm.response.json();\r",
									"\r",
									"    pm.expect(jsonData).to.have.property(\"name\");\r",
									"    pm.expect(jsonData).to.have.property(\"status\");\r",
									"    pm.expect(jsonData).to.have.property(\"_id\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/get/6889ebfb8210cdb87d96c44b",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"get",
								"6889ebfb8210cdb87d96c44b"
							]
						}
					},
					"response": []
				},
				{
					"name": "getATodoItem - non-existent todo ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should return 404 for non-existing item\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/get/64ef0ed31234567890abcdef",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"get",
								"64ef0ed31234567890abcdef"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Put Requests",
			"item": [
				{
					"name": "updateTodoItem - existing todo ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Item updated\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Testing APIs is fun\",\r\n    \"status\": true,\r\n    \"id\": \"6889ebfb8210cdb87d96c44b\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/put/6889ebfb8210cdb87d96c44b",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"put",
								"6889ebfb8210cdb87d96c44b"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateTodoItem - non-existent todo ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should return 404 for valid but nonexistent ID\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Testing APIs is fun\",\r\n    \"status\": true,\r\n    \"id\": \"6889ebfb8210cdb87d96c44b\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/put/64ef0ed31234567890abcdef",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"put",
								"64ef0ed31234567890abcdef"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Post Requests",
			"item": [
				{
					"name": "postTodo - Posive & Negative",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Positive test\r",
									"pm.test(\"Should return 201 and create item\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    const res = pm.response.json();\r",
									"    console.log(\"Response body:\", res);\r",
									"    pm.expect(res.todo).to.have.property(\"name\", \"Testing APIs is fun\");\r",
									"    pm.expect(res.todo).to.have.property(\"status\", true);\r",
									"});\r",
									"\r",
									"// Negative test \r",
									"pm.test(\"Should fail with 400 if name is missing\", function () {\r",
									"    if (pm.request.body.raw.includes('\"name\": \"\"')) {\r",
									"        pm.response.to.have.status(400);\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Testing APIs is fun\",\r\n    \"status\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/post",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"post"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}